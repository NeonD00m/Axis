{"searchDocs":[{"title":"Best Practices","type":0,"sectionRef":"#","url":"/axis/docs/Introduction/best_practices","content":"Best Practices WIP WIP ","keywords":"","version":"Next"},{"title":"Controller","type":0,"sectionRef":"#","url":"/axis/docs/Devices/controller","content":"Controller WIP","keywords":"","version":"Next"},{"title":"Example Game","type":0,"sectionRef":"#","url":"/axis/docs/Introduction/example_game","content":"","keywords":"","version":"Next"},{"title":"Behind The Scenes​","type":1,"pageTitle":"Example Game","url":"/axis/docs/Introduction/example_game#behind-the-scenes","content":" WIP ","version":"Next","tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/axis/docs/Introduction/getting_started","content":"","keywords":"","version":"Next"},{"title":"Installation​","type":1,"pageTitle":"Getting Started","url":"/axis/docs/Introduction/getting_started#installation","content":" Currently only available on pesde ","version":"Next","tagName":"h2"},{"title":"Input","type":0,"sectionRef":"#","url":"/axis/api/Input","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Input","url":"/axis/api/Input#functions","content":" ","version":null,"tagName":"h2"},{"title":"read​","type":1,"pageTitle":"Input","url":"/axis/api/Input#read","content":"&lt;/&gt; Input:read(controller: number?) → T,T Reads current and previous values for the axis local current, previous = attack:read()   ","version":null,"tagName":"h3"},{"title":"pressing​","type":1,"pageTitle":"Input","url":"/axis/api/Input#pressing","content":"&lt;/&gt; Input:pressing(controller: number?) → boolean Gets whether the axis has any active input  ","version":null,"tagName":"h3"},{"title":"changed​","type":1,"pageTitle":"Input","url":"/axis/api/Input#changed","content":"&lt;/&gt; Input:changed(controller: number?) → boolean Gets whether an axis has changed since the last update  ","version":null,"tagName":"h3"},{"title":"pressed​","type":1,"pageTitle":"Input","url":"/axis/api/Input#pressed","content":"&lt;/&gt; Input:pressed(controller: number?) → boolean Gets whether the axis was activated this update  ","version":null,"tagName":"h3"},{"title":"released​","type":1,"pageTitle":"Input","url":"/axis/api/Input#released","content":"&lt;/&gt; Input:released(controller: number?) → boolean Gets whether the axis was deactivated this update  ","version":null,"tagName":"h3"},{"title":"hold​","type":1,"pageTitle":"Input","url":"/axis/api/Input#hold","content":"&lt;/&gt; Input:hold( value: T, controller: number? ) → () → () Adds a temporary manual input to the axis, and provides a function to release it local release = attack:hold(1) -- adds 1 to the axis --release later release() -- removes the added value   ","version":null,"tagName":"h3"},{"title":"move​","type":1,"pageTitle":"Input","url":"/axis/api/Input#move","content":"&lt;/&gt; Input:move( value: T, controller: number? ) → () Adds an input to the axis for a single frame  ","version":null,"tagName":"h3"},{"title":"map​","type":1,"pageTitle":"Input","url":"/axis/api/Input#map","content":"&lt;/&gt; Input:map(keyMap: Map&lt;T&gt;) → () Maps input types to an input axis attack:map { Enum.KeyCode.Q, Enum.KeyCode.ButtonA, } -- or to clear all input mappings attack:map {}   ","version":null,"tagName":"h3"},{"title":"update​","type":1,"pageTitle":"Input","url":"/axis/api/Input#update","content":"&lt;/&gt; Input:update() → () Updates the current and previous values of the input axis ","version":null,"tagName":"h3"},{"title":"Axis","type":0,"sectionRef":"#","url":"/axis/api/Axis","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#types","content":" ","version":null,"tagName":"h2"},{"title":"DeviceType​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#DeviceType","content":"&lt;/&gt; type DeviceType = &quot;Desktop&quot; | &quot;Touch&quot; | &quot;Controller&quot;  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#functions","content":" ","version":null,"tagName":"h2"},{"title":"input​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#input","content":"&lt;/&gt; Axis.input(keyMap: Map&lt;T&gt;) → Input&lt;T&gt; ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"Axis","url":"/axis/api/Axis##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#Map<T>","content":"type Map&lt;T&gt; = {[Enum | string]: T} &amp; {Enum.KeyCode | Enum.UserInputType}  Creates a new input axis with the provided keymap local attack = Axis.input { Enum.KeyCode.E, Enum.KeyCode.ButtonX, }   ","version":null,"tagName":"h3"},{"title":"update​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#update","content":"&lt;/&gt; Axis.update() → () Updates all the provided inputs as a shorthand Axis.update(inputMap)   ","version":null,"tagName":"h3"},{"title":"device​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#device","content":"&lt;/&gt; Axis.device() → () Gets the device of the provided UserInputType (or the last UserInputType if none is provided) local device = Axis.device() --gets device of last input if device == &quot;Desktop&quot; then print(&quot;yay&quot;) end  ","version":null,"tagName":"h3"},{"title":"Desktop","type":0,"sectionRef":"#","url":"/axis/docs/Devices/desktop","content":"Desktop WIP","keywords":"","version":"Next"},{"title":"Touch","type":0,"sectionRef":"#","url":"/axis/docs/Devices/touch","content":"Touch WIP","keywords":"","version":"Next"},{"title":"Glossary","type":0,"sectionRef":"#","url":"/axis/docs/intro","content":"Glossary Here's a quick navigation of Planck's Docs. Introduction​ Getting StartedBest Practices Devices​ DesktopControllerTouch API​ AxisInput","keywords":"","version":"Next"}],"options":{"id":"default"}}